name: Build
on:
  push:
    branches:
  workflow_dispatch:

env:
  AWS_CDN_ACCESS_KEY_ID:  ${{ secrets.AWS_CDN_ACCESS_KEY_ID }}
  AWS_CDN_SECRET_KEY: ${{ secrets.AWS_CDN_SECRET_KEY }}

jobs:
  tests:
    name: tests
    runs-on: ubuntu-latest
        
    steps:
      - run: echo ${GITHUB_REF} ${GITHUB_REF##*/}
      - run: echo ${GITHUB_EVENT_NAME}

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          persist-credentials: true

      - uses: actions/setup-node@v2
        with:
          node-version: '11'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: yarn --frozen-lockfile

      - name: tests
        #if: github.ref != 'refs/heads/develop' and github.ref != 'refs/heads/master'
        run: |
          set -e
          yarn lint
          yarn test
          #yarn build --frozen-lockfile          

  deploy-tst:
    name: deploy-tst
    runs-on: ubuntu-latest
    needs: tests
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          persist-credentials: true

      - uses: actions/setup-node@v2
        with:
          node-version: '11'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: yarn --frozen-lockfile

      - name: install rclone
        run: curl https://rclone.org/install.sh | sudo bash

      - name: deploy-tst
        run: |
          set -e
          yarn build --frozen-lockfile          
          ls -al
          #rclone copy dist :s3://cdn.pay.super.com/payform/standalone/dev/pay/order/ \
          # --s3-access-key-id=$AWS_CDN_ACCESS_KEY_ID --s3-secret-access-key=$AWS_CDN_SECRET_KEY \
          #  --s3-region=eu-west-1; else echo "PR skip upload"

  deploy-stg:
    name: deploy-stg
    runs-on: ubuntu-latest
    needs: tests
    if: startsWith(github.ref, 'refs/heads/release') && github.event_name == 'push'
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          persist-credentials: true

      - uses: actions/setup-node@v2
        with:
          node-version: '11'

      - run: yarn --frozen-lockfile

      - name: install rclone
        run: curl https://rclone.org/install.sh | sudo bash

      - name: deploy-stage
        run: |
          set -e
          yarn build-stage --frozen-lockfile
          ls -al
          #rclone copy dist :s3://cdn.pay.super.com/payform/standalone/stage/pay/order/ \
          #  --s3-access-key-id=$AWS_CDN_ACCESS_KEY_ID --s3-secret-access-key=$AWS_CDN_SECRET_KEY \
          #  --s3-region=eu-west-1; else echo "PR skip upload"

  deploy-release:
    name: deploy-release
    runs-on: ubuntu-latest
    needs: tests
    if: startsWith(github.ref, 'refs/tags/v') && github.event_name == 'push'
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          persist-credentials: true

      - uses: actions/setup-node@v2
        with:
          node-version: '11'

      - run: yarn --frozen-lockfile

      - name: install rclone
        run: curl https://rclone.org/install.sh | sudo bash

      - name: deploy-release
        run: |
          set -e
          yarn build-release --frozen-lockfile
          ls -al
          #rclone copy dist :s3://cdn.pay.super.com/payform/standalone/latest/pay/order/ \
          #  --s3-access-key-id=$AWS_CDN_ACCESS_KEY_ID --s3-secret-access-key=$AWS_CDN_SECRET_KEY \
          #  --s3-region=eu-west-1; else echo "PR skip upload"